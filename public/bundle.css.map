{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/WebSite.svelte",
    "../src/components/Page.svelte",
    "../src/components/About.svexy",
    "../src/components/Logo.svelte",
    "../src/components/Index.svexy",
    "../src/components/Sidebar.svelte",
    "../src/components/NavBar.svelte",
    "../src/components/Footer.svelte",
    "../src/components/Twitter.svelte",
    "../src/components/BlogPosts.svelte"
  ],
  "sourcesContent": [
    "<svelte:head>\n  <title>{siteName + seoMeta.addTitle}</title>\n  <link rel='icon' type='image/png' href='/imgs/favicon.png'>\n  <meta name=\"robots\" content=\"{seoMeta.robot}\">\n  <meta name=\"description\" content=\"{seoMeta.description}\">\n</svelte:head>\n\n<svelte:window on:resize={winResize} bind:innerWidth={winWidth} />\n\n<div id='page' style=\"background-color: {styles.backgroundColor}; font: {styles.font};\">\n  <header style=\"background-color: {styles.divBackgroundColor}; background-image: {styles.headerBackgroundPicture}; \n  border: {styles.borderSize} solid {styles.borderColor}; border-radius: {styles.borderRadius};\n  color: {styles.textColor}; font: {styles.headerFont};\">\n    {#if showLogo }\n      <Logo />\n    {/if}\n    <div id='title' style=\"width: {showLogo ? 'auto' : '100%'};\">\n      <h1>{siteName}</h1>\n      <h3>{byLine}</h3>\n    </div>\n    <div id='spacer'>\n    </div>\n  </header>\n  <NavBar />\n  <div id='main' >\n    {#if styles.showSideBar && styles.sideBarLeft && sidebarON}\n      <Sidebar />\n    {/if}\n    <Router {routes} />\n    {#if styles.showSideBar && !styles.sideBarLeft && sidebarON}\n      <Sidebar />\n    {/if}\n  </div>\n  <Footer />\n</div>\n\n<style>\n  :global(body) {\n    display: flex;\n    flex-direction: column;\n    margin: 0px;\n    padding: 0px;\n  }\n\n  :global(a.active) {\n    color: #155393 !important;\n    text-decoration-color: #155393;\n  }\n\n  header {\n    display: flex;\n    flex-direction: row;\n    width: 85%;\n    background-color: #ECDAAC;\n    color: black;\n    margin: auto;\n    border-radius: 10px;\n    border: 5px solid #AA7942;\n    padding: 10px;\n    flex-shrink: 0;\n  }\n\n  Router {\n    margin: 0px;\n    padding: 0px;\n  }\n\n  #spacer {\n    width: 150px;\n    padding: 0px;\n    margin: 0px;\n  }\n\n  #title {\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    align-content: center;\n    flex-shrink: 0;\n }\n\n  #logo {\n    width: 100px;\n    height: 100px;\n  }\n\n  #page {\n    display: flex;\n    flex-direction: column;\n    margin: 0px;\n    padding: 15px;\n  }\n\n  #main {\n    display: flex;\n    flex-direction: row;\n    width: 87%;\n    align-content: center;\n    margin: auto;\n    padding: 0px;\n }\n</style>\n\n<script>\n  import { onMount } from 'svelte';\n  import About from './components/About.svexy';\n  import Index from './components/Index.svexy';\n  import Page from './components/Page.svelte';\n  import Logo from './components/Logo.svelte';\n  import Sidebar from './components/Sidebar.svelte';\n  import NavBar from './components/NavBar.svelte';\n  import Footer from './components/Footer.svelte';\n  import { info } from './store/infoStore.js';\n  import { seo } from './store/SEOstore.js';\n  import { showSidebar } from './store/showSidebar.js';\n  import { showNavbar } from './store/showNavbar.js';\n  import Router, { link } from 'svelte-spa-router';\n  import active from 'svelte-spa-router/active';\n\n  const routes = {\n    //\n    // Exact path to the index and about pages. I want these\n    // to be fast, so they are preloaded with everything else.\n    //\n    '/': Index,\n\n    '/about': About,\n\n    //\n    // Catch-all\n    // This is optional, but if present it must be the last\n    //\n    // If not caught otherwise, it must be a markdown file\n    // on the file system. You can encapsulate the Page inside\n    // your own for more customizations.\n    //\n    '*': Page\n  }\n\n  let siteName = '';\n  let byLine = '';\n  let styles = {};\n  let seoMeta = {};\n  let winWidth = 0;\n  let sidebarON = true;\n  let showLogo = true;\n\n  onMount(() => {\n    //\n    // Subscribe to the information store to get the site information.\n    //\n    const unsubscribeInfo = info.subscribe((value) => {\n      siteName = value.siteName;\n      byLine = value.byLine;\n      styles = value.styles;\n      document.body.style.backgroundColor = styles.backgroundColor;\n    });\n\n    const unsubscribeSEO = seo.subscribe((value) => {\n      seoMeta = value;\n    });\n   \n    winResize({});\n    return () => {\n      unsubsribeInfo();\n      unsubscribeSEO();\n    };\n  });\n\n  function winResize(e) {\n    //\n    // Determine if we will show the sidebar or not.\n    //\n    if(winWidth < styles.widthSidebar) {\n      sidebarON = false;\n    } else {\n      sidebarON = true;\n    }\n\n    //\n    // Tell all subscribers the news.\n    //\n    showSidebar.set(sidebarON);\n\n    if(winWidth < styles.widthLogo) {\n      showLogo = false;\n    } else {\n      showLogo = true;\n    }\n\n    if(winWidth < styles.widthNavbar) {\n      showNavbar.set(false);\n    } else {\n      showNavbar.set(true);\n    }\n  }\n</script>\n\n",
    "{#await lastPromise}\n  <content in:fade=\"{{duration: 500}}\" style=\"width: {sideBarON ? '70%' : '100%'}; border: {styles.borderSize} solid {styles.borderColor}; border-radius: {styles.borderRadius}; background-color: {styles.divColor}; background-image: {styles.divBackgroundPicture}; color: {styles.textColor};\" >\n    <h2>Loading Partials...</h2>\n  </content>\n{:then dt}\n  {#await firstPromise}\n    <content in:fade=\"{{duration: 500}}\" style=\"width: {sideBarON ? '70%' : '100%'}; border: {styles.borderSize} solid {styles.borderColor}; border-radius: {styles.borderRadius}; background-color: {styles.divColor}; background-image: {styles.divBackgroundPicture}; color: {styles.textColor};\" >\n      <h2 id='waiting'>Loading page...</h2>\n    </content>\n  {:then data}\n    <content in:fade=\"{{duration: 500}}\" style=\"width: {sideBarON ? '70%' : '100%'}; border: {styles.borderSize} solid {styles.borderColor}; border-radius: {styles.borderRadius}; background-color: {styles.divColor}; background-image: {styles.divBackgroundPicture}; color: {styles.textColor};\" >\n      {@html processData(data)}\n    </content>\n  {:catch e}\n    <content in:fade=\"{{duration: 500}}\" style=\"width: {sideBarON ? '70%' : '100%'}; border: {styles.borderSize} solid {styles.borderColor}; border-radius: {styles.borderRadius}; background-color: {styles.divColor}; background-image: {styles.divBackgroundPicture}; color: {styles.textColor};\" >     \n      {@html errorPage}\n    </content>\n  {/await}\n{:catch e}\n  <content in:fade=\"{{duration: 500}}\" style=\"width: {sideBarON ? '70%' : '100%'}; border: {styles.borderSize} solid {styles.borderColor}; border-radius: {styles.borderRadius}; background-color: {styles.divColor}; background-image: {styles.divBackgroundPicture}; color: {styles.textColor};\" >     \n    {@html errorPage}\n  </content>\n{/await}\n\n<style>\n  content {\n    margin: 10px 0px;\n    padding: 10px;\n    flex-shrink: 1;\n  }\n\n  #waiting {\n    height: 100%;\n    width: 100%;\n    min-height: 200px;\n    margin: auto;\n  }\n\n  code {\n    overflow: auto;\n  }\n\n  .alert {\n    background-color: red;\n    color: black;\n  }\n</style>\n\n<script>\n  import { onMount } from 'svelte';\n  import showdown from 'showdown';\n  import showdownHighlight from \"showdown-highlight\";\n  import {location, querystring} from 'svelte-spa-router';\n  import { get } from 'svelte/store';\n  import { fade } from 'svelte/transition';\n  import { info } from '../store/infoStore.js';\n  import { showSidebar } from '../store/showSidebar.js';\n\n  export let params = {};\n  \n  let converter = null;\n  let page = null;\n  let firstPromise;\n  let errorPage = '';\n  let parts = [];\n  let styles = {};\n  let site = {};\n  let lastPromise;\n  let sideBarON = true;\n\n  async function fetchPage(pg) {\n    if(pg !== null) {\n      var address = '';\n      if(site.local) {\n        address = site.address;\n      } else {\n        address = site.GitHub;\n      }\n      const response = await fetch(address + '/site' + pg + \".md\");\n      const text = await response.text();\n      if(response.ok && (response.status === 200)) {\n        if(((text[0] !== '-')&&(text[0] !== '+'))||(text[0] === '<')) {\n          //\n          // It's not a proper header. Treat as an error.\n          //\n          return errorPage\n        } else {\n          return text;\n        }\n      } else {\n        return errorPage\n      }\n    } else {\n      //\n      // I have to return a promise, let's just load a page from \n      // anywhere.\n      //\n      const res = await fetch(`https://svelte.dev/tutorial/random-number`);\n      const text = await res.text();\n\n      if (res.ok) {\n        return text;\n      } else {\n        throw new Error(text);\n      }\n    }\n  }\n\n  onMount(() => {\n    showdown.setFlavor('github');\n    showdown.setOption('simpleLineBreaks',false);\n\n    converter = new showdown.Converter({\n      extensions: [showdownHighlight]\n    });\n\n    //\n    // Create the helpers functions for Handlebars.\n    //\n    window.Handlebars.registerHelper('save', function(name, text) {\n      window.Handlebars.registerHelper(name, function() {\n        return text;\n      });\n      return text;\n    });\n\n    window.Handlebars.registerHelper('date', function(dFormat) {\n      return window.moment().format(dFormat);\n    });\n\n    window.Handlebars.registerHelper('cdate', function(cTime, dFormat, options) {\n      if(options.data.root.indexOf(cTime) >= 0) {\n        cTime = options.root[cTime];\n      }\n      return window.moment(cTime).format(dFormat);\n    });\n\n    window.Handlebars.registerHelper('last', function(weeks, dow, fmat) {\n      return window.moment().add(-7 * weeks, 'd').day(dow).format(fmat);\n    });\n\n    window.Handlebars.registerHelper('next', function(weeks, dow, fmat) {\n      return window.moment().add(7 * weeks, 'd').day(dow).format(fmat);\n    });\n\n    //\n    // Setup the location store to update the page when the location changes.\n    // This is done by setting a new promise in the promise variable for retrieving\n    // the new page information.\n    //\n    const unsubscribeInfo = info.subscribe(value => {\n      site = value;\n      styles = value.styles;\n    });\n\n    const unsubscribeLocation = location.subscribe(value => {\n      page = value;\n      lastPromise = getPartials();\n      firstPromise = fetchPage(page);\n    });\n\n    const unsubscribeshowSidebar = showSidebar.subscribe(value => {\n      sideBarON = value;\n    });\n\n    return () => { \n      unsubscribeshowSidebar(); \n      unsubscribeInfo(); \n      unsubscribeLocation();\n    };\n  });\n\n  async function getPartials() {\n    //\n    // Get some error page.\n    //\n    var st = get(info);\n    var address = '';\n    if(st.local) {\n      address = st.address;\n    } else {\n      address = st.GitHub;\n    }\n    var rep = await fetch(address + '/site/404.md');\n    errorPage = await rep.text();\n\n    //\n    // Get the parts pages.\n    //\n    var lastPromise = null;\n    for(var pg of st.parts) {\n      var rep = await fetch(address + '/site/parts/' + pg);\n      var partial = await rep.text();\n      lastPromise = partial;\n      window.Handlebars.registerPartial(pg, partial);\n    }\n\n    return lastPromise;\n  }\n\n  function processData(data) {\n    var result = '';\n    \n    //\n    // This should never happen but if it does, then reload.\n    //\n    if(typeof data === 'undefined') return '';\n    \n    if(data[0] === '<') {\n      firstPromise = fetchPage(page);\n      return '';\n    }\n\n    //\n    // There are two types of front matter: delimited by three '-' and using a colon,\n    // and delimited by three '+' and using an '='. This should catch both types.\n    //\n    // TODO: Maybe add json frontmatter processing?\n    //\n    let fmregexp = new RegExp(/(\\-\\-\\-)|(\\+\\+\\+)/);\n\n    //\n    // Remove the front matter and process it.\n    //\n    data = data.toString().split('\\n');\n    var fmatter = false;\n    var fm = [];\n    var body = [];\n\n    //\n    // Since we are able to turn on and off the frontmatter\n    // processing, we need to make sure it's not changed more\n    // than twice. If so, everything else is just body.\n    //\n    var count = 0;\n    for(var i = 0; i < data.length; i++) {\n      if(fmregexp.test(data[i])) {\n        if(fmatter) i++;\n        fmatter = !fmatter;\n        count++;\n      }\n      if(fmatter && (count < 2)) {\n        fm.push(data[i]);\n      } else {\n        body.push(data[i]);\n      }\n    }\n\n    //\n    // Create the data for Handlebars.\n    //\n    var hdata = [];\n    hdata[\"cDateMDY\"] = window.moment().format(\"MMMM DD, YYYY\");\n    hdata[\"cDateDMY\"] = window.moment().format(\"DD MMMM YYYY\");\n    hdata[\"cDateDOWDMY\"] = window.moment().format(\"dddd, DD MMMM YYYY\");\n    hdata[\"cDateDOWMDY\"] = window.moment().format(\"dddd MMMM DD, YYYY\");\n    hdata[\"cDay\"] = window.moment().format(\"DD\");\n    hdata[\"cMonth\"] = window.moment().format(\"MMMM\");\n    hdata[\"cYear\"] = window.moment().format(\"YYYY\");\n    hdata[\"cMonthShort\"] = window.moment().format(\"MMM\");\n    hdata[\"cYearShort\"] = window.moment().format(\"YY\");\n    hdata[\"cDOW\"] = window.moment().format(\"dddd\");\n    hdata[\"cMDthYShort\"] = window.moment().format(\"MMM Do YY\");\n    hdata[\"cMDthY\"] = window.moment().format(\"MMMM Do YYYY\");\n    hdata[\"cHMSampm\"] = window.moment().format(\"h:mm:ss a\");\n    hdata[\"cHMampm\"] = window.moment().format(\"h:mm a\");\n    hdata[\"cHMS24\"] = window.moment().format(\"H:mm:ss\");\n    hdata[\"cHM24\"] = window.moment().format(\"H:mm\");\n\n    //\n    // Add the front matter to the Handlebar's data.\n    //\n    for(var i = 1; i < fm.length;i++) {\n      var parts = fm[i].split(' = ');\n      if(parts.length < 2) parts = fm[i].split(': ');\n      if(parts.length > 2) parts[1] = parts.slice(2);\n      var item = unescape(parts[1]).trim();\n\n      //\n      // Sometimes, the front matter has quotes. Let's remove them\n      // automatically so I don't need to change everything.\n      //\n      if(item[0] === '\"') item = item.slice(1,-1);\n\n      //\n      // Set the frontmater into the data array for Handlebars\n      // to use.\n      //\n      hdata[parts[0].trim()] = item;\n    }\n\n    //\n    // Add the information from the info store.\n    //\n    const linfo = get(info);\n    for(var key of Object.keys(linfo)) {\n      hdata[key] = linfo[key];\n    }\n\n    //\n    // Run the body through Handlebars.\n    //\n    var bodyTemplate = window.Handlebars.compile(body.join('\\n'));\n    var trying = true;\n    var newBody = '';\n\n    //\n    // If the partials are called before loaded, running the template will throw\n    // an error. Catch it and tell the user to move to another page and back.\n    //\n    try {\n      newBody = bodyTemplate(hdata);\n    } catch(e) {\n      newBody = \"<h1>Page not ready...</h1><p>Please don't reload this page. Go to another markdown page and come back.</p>\";\n    }\n\n    //\n    // Convert the data given to HTML.\n    //\n    if(converter != null) {\n      result = converter.makeHtml(newBody);\n    }\n\n    //\n    // Return the results.\n    //\n    return result;\n  }\n</script>\n",
    "<div class=\"box\" style=\"border: {styles.borderSize} solid {styles.borderColor}; border-radius: {styles.borderRadius}; background-color: {styles.divColor}; background-image: {styles.divBackgroundPicture}; color: {styles.textColor};\" in:fade=\"{{duration: 500}}\">\n<h2>About Us</h2>\n<p>This is a markdown file with information about you. Change as\nyou see fit.</p>\n<p>The <code>div</code> setup the proper styling for the markdown and controls\nthe animation of it on the site. Thereore, leave the div information\nas it is and just change the markdown inbetween.</p>\n</div>\n\n<script>\n  import { fade } from 'svelte/transition';\n  import { onMount } from 'svelte';\n  import { info } from '../store/infoStore.js';\n \n  let styles = {};\n\n  onMount(() => {\n    //\n    // Subscribe to the information store to get the site information.\n    //\n    const unsubscribeInfo = info.subscribe((value) => {\n      styles = value.styles;\n    });\n    \n    return () => { unsubscribeInfo(); };\n  });\n\n\n\n</script>\n<style>\n  .box {\n    width: 100%;\n    margin: auto;\n    padding: 10px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n\n</style>",
    "<svg viewBox=\"0 0 100 81\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xml:space=\"preserve\" xmlns:serif=\"http://www.serif.com/\" style=\"fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;\">\n  <g transform=\"matrix(1.53154,0,0,1.53154,1.70555,21.8629)\">\n    <text x=\"-5px\" y=\"24px\" style=\"font-family:'Athelas-Regular', 'Athelas';font-size:36px;\">Logo</text>\n  </g>\n</svg>\n\n<style>\n  svg {\n    margin: auto;\n    flex-shrink: 0;\n    width: 150px;\n    height: 100px;\n  }\n</style>\n",
    "<div class=\"box\" style=\"border: {styles.borderSize} solid {styles.borderColor}; border-radius: {styles.borderRadius}; background-color: {styles.divColor}; background-image: {styles.divBackgroundPicture}; color: {styles.textColor};\" in:fade=\"{{duration: 500}}\">\n<p>This markdown file contains the front page for your site. Everything in this\nfile will be in the main content area. This file and the <code>About.svexy</code> file are\ncompiled into a Svelte element and loaded when any page is loaded. Therefore, when\nthe user selects links to these pages, they will appear instantly as they are\nalready loaded into the user’s browser.</p>\n<p>The template is setup to run in development mode. To run from GitHub, you need to\nedit the <code>infoStore.js</code> file in the <code>store</code> directory. The items you have to change\nis:</p>\n<pre><code class=\"language-sh\">GitHub: '&lt;the address of the site directory in raw mode&gt;',\nlocal: false\n</code></pre>\n<p>The other fields are display on the website and should already be changed. With the\nabove changes, you can run <code>mask build</code>, commit the changes in the <code>launch</code> directory,\nand run <code>git push</code> to push it to your site.</p>\n<p>To get ‘<the address of the site directory in raw mode>’, you first have to commit the\nbasic site to your GitHub pages repository, navigate to the <code>launch/site</code> folder on\nGitHub, and then click the <code>raw</code> button. The address in your browser should have\nthe full address to the <code>site</code> directory in raw mode. Copy and paste that address into\nthe <code>infoStore.js</code> file as mentioned above.</p>\n<p>The <code>infoStore.js</code> file also contains the site’s styling configuration. You can change the\nlook of your site from the <code>info.style</code> object. You can also turn on/off the sidebar and\nmake the sidebar on the left side or the right side. You can make the site look anyway like.\nAlso, by changing the store style values, you can dynamically change the styling of your site.</p>\n</div>\n\n<script>\n  import { fade } from 'svelte/transition';\n  import { onMount } from 'svelte';\n  import { info } from '../store/infoStore.js';\n \n  let styles = {};\n\n  onMount(() => {\n    //\n    // Subscribe to the information store to get the site information.\n    //\n    const unsubscribeInfo = info.subscribe((value) => {\n      styles = value.styles;\n    });\n\n    return () => { unsubscribeInfo(); };\n  });\n\n\n</script>\n<style>\n  .box {\n    width: 100%;\n    margin: auto;\n    padding: 10px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n  .box {\n    width: 100%;\n    margin: auto;\n    padding: 10px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n\n</style>",
    "{#if styles.showSideBar && !styles.sideBarLeft}\n<div id='sidebar' style=\"margin-right: 0px; margin-left: 10px; background-color: {styles.divColor}; background-image: {styles.divBackgroundPicture}; border: {styles.borderSize} solid {styles.borderColor}; border-radius: {styles.borderRadius}; color: {styles.textColor};\"> \n  <Twitter>\n    <p>Put the line you get from Twitter for your news here.</p>\n  </Twitter>\n  <BlogPosts />\n</div>\n{/if}\n\n{#if styles.showSideBar && styles.sideBarLeft}\n<div id='sidebar' style=\"margin-right: 10px; margin-left: 0px; background-color: {styles.divColor}; background-image: {styles.divBackgroundPicture}; border: {styles.borderSize} solid {styles.borderColor}; border-radius: {styles.borderRadius}; color: {styles.textColor};\">\n  <Twitter>\n    <p>Put the line you get from Twitter for your news here.</p>\n  </Twitter>\n  <BlogPosts />\n</div>\n{/if}\n\n<style>\n  #sidebar {\n    width: 30%;\n    padding: 10px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n</style>\n\n<script>\n  import Twitter from './Twitter.svelte';\n  import BlogPosts from './BlogPosts.svelte';\n  import { onMount } from 'svelte';\n  import { info } from '../store/infoStore.js';\n \n  let styles = {};\n\n  onMount(() => {\n    //\n    // Subscribe to the information store to get the site information.\n    //\n    const unsubscribeInfo = info.subscribe((value) => {\n      styles = value.styles;\n    });\n\n    return () => { unsubscribeInfo(); };\n  });\n\n</script>\n",
    "<div id='navbar' style=\"background-color: {styles.divColor}; background-image: {styles.divbackgroundPicture}; \n                        border: {styles.borderSize} solid {styles.borderColor}; border-radius: {styles.borderRadius}; \n                        color: {styles.textColor};\n                        flex-direction: {navBarON ? 'row' : 'column'};\" >\n  <a class='navItem' href='/' use:link use:active>Home</a>\n  <a class='navItem' href='/blog/index' use:link use:active>Blog</a>\n  <a class='navItem' href='/about' use:link use:active>About</a>\n</div>\n\n<style>\n  .navItem a {\n    color: black;\n    text-decoration-color: black;\n  }\n\n  #navbar {\n    display: flex;\n    flex-direction: row;\n    width: 85%;\n    margin: auto;\n    border-radius: 10px;\n    padding: 10px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n\n  #navbar a {\n    text-decoration: none;\n    font-size: 24px;\n  }\n\n  .navItem {\n    margin-right: 26px;\n    text-decoration: none;\n  }\n</style>\n\n<script>\n  import Router, { link } from 'svelte-spa-router';\n  import active from 'svelte-spa-router/active';\n  import { onMount } from 'svelte';\n  import { info } from '../store/infoStore.js';\n  import { showNavbar } from '../store/showNavbar.js';\n\n  let styles = {};\n  let navBarON = true;\n\n  onMount(() => {\n    //\n    // Subscribe to the information store to get the site information.\n    //\n    const unsubscribeInfo = info.subscribe((value) => {\n      styles = value.styles;\n    });\n\n    const unsubscribeshowNavbar = showNavbar.subscribe((value) => {\n      navBarON = value;\n    })\n\n    return () => { unsubscribeshowNavbar(); unsubscribeInfo(); };\n  });\n\n</script>\n\n",
    "<footer style=\"background-color: {styles.divColor}; background-image: {styles.divBackgroundPicture}; border: {styles.borderSize} solid {styles.borderColor}; border-radius: {styles.borderRadius}; color: {styles.textColor};\">\n  <div id='leftBox'>\n    <p>Created using <a href='https://github.com/raguay/SvelteGithubSiteTemplate'>SvelteWeb</a></p>\n    <p>Copyrighted by Richard Guay</p>\n  </div>\n</footer>\n\n<style>\n  footer {\n    width: 85%;\n    margin: auto;\n    padding: 10px;\n  }\n\n  #leftBox {\n    float: left;\n    display: flex;\n    flex-direction: column;\n  }\n\n  #leftBox p {\n    margin: 0px;\n    padding: 0px;\n  }\n\n</style>\n\n<script>\n  import { onMount } from 'svelte';\n  import { info } from '../store/infoStore.js';\n \n  let styles = {};\n\n  onMount(() => {\n    //\n    // Subscribe to the information store to get the site information.\n    //\n    const unsubscribeInfo = info.subscribe((value) => {\n      styles = value.styles;\n    });\n\n    return () => { unsubscribeInfo(); };\n  });\n</script>\n\n",
    "<div id='twitter'>\n  <slot />\n</div>\n\n<style>\n  #twitter {\n  }\n\n  a {\n    text-decoration: none;\n  }\n</style>\n\n<script>\n  import { onMount } from 'svelte';\n  import { info } from '../store/infoStore.js';\n \n  let styles = {};\n\n  onMount(() => {\n    //\n    // Subscribe to the information store to get the site information.\n    //\n    const unsubscribeInfo = info.subscribe((value) => {\n      styles = value.styles;\n    });\n\n    return () => { unsubscribeInfo(); };\n  });\n\n\n</script>\n",
    "<div id='blog' style=\"background-color: {styles.divColor}; background-image: {styles.divBackgroundPicture}; color: {styles.textColor};\">\n  <h4>Blog Links</h4>\n  <a href='/#/blog/my-first-post'>My First Post</a>\n</div>\n\n<style>\n  #blog {\n    display: flex;\n    flex-direction: column;\n    align-items: left;\n    align-content: left;\n    margin: 10px 0px 10px 0px;\n  }\n\n  #blog h4 {\n    margin: auto;\n    padding: 5px 0px 10px 0px;\n  }\n\n  #blog a {\n    text-decoration: none;\n  }\n</style>\n\n<script>\n  import { onMount } from 'svelte';\n  import { info } from '../store/infoStore.js';\n \n  let styles = {};\n\n  onMount(() => {\n    //\n    // Subscribe to the information store to get the site information.\n    //\n    const unsubscribeInfo = info.subscribe((value) => {\n      styles = value.styles;\n    });\n\n    return () => { unsubscribeInfo(); };\n  });\n\n</script>\n\n"
  ],
  "names": [],
  "mappings": "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"
}